class TaskComment < ApplicationRecord

  # ==========================================================================================================
  # Relations ================================================================================================
  # ==========================================================================================================

  belongs_to :user
  belongs_to :task

  # ==========================================================================================================
  # Validations ==============================================================================================
  # ==========================================================================================================

  validates :content, presence: true
  validates :user, presence: :true
  validates :task, presence: :true

  # ==========================================================================================================
  # Callbacks ================================================================================================
  # ==========================================================================================================

  after_commit :generate_creation_internal_event, on: :create

  # ==========================================================================================================
  # Instance methods =========================================================================================
  # ==========================================================================================================

  def parsed_content
    GitHub::Markup.render_s(GitHub::Markups::MARKUP_MARKDOWN, self.content)
  end

  private

    def generate_creation_internal_event
      InternalEvent.create({
        subject:    :task_comment_creation,
        klass:      :task_comment,
        subject_id: self.id,
        user_id:    self.user.id,
        project_id: self.task.project.id
      })
    end
end
